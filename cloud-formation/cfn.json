{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Content API - Sanity Tests",

    "Parameters": {
        "Stage": {
            "Description": "Environment name",
            "Type": "String",
            "Default": "PROD"
        },
        "host": {
            "Description": "Content API host",
            "Type": "String"
        },
        "hostPublicSecure": {
            "Type": "String"
        },
        "previewHost": {
            "Description": "Content API Preview host",
            "Type": "String"
        },
        "apiKey": {
            "Description": "Content API Live API key",
            "Type": "String"
        },
        "writeHost": {
            "Description": "Porter host",
            "Type": "String"
        },
        "writePreviewHost": {
            "Type": "String"
        },
        "writeUsername": {
            "Description": "Porter username",
            "Type": "String"
        },
        "writePassword": {
            "Description": "Porter password",
            "Type": "String",
            "NoEcho": true
        },
        "pagerDutyServiceKey": {
            "Description": "Pager Duty Service key for High Priority incidents",
            "Type": "String"
        },
        "pagerDutyServiceKeyLowPriority": {
            "Description": "Pager Duty Service key for Low Priority incidents",
            "Type": "String"
        },
        "composerHost": {
            "Description": "Composer Flex Import CODE host name",
            "Type": "String"
        },
        "r2AdminHost": {
            "Description": "R2 Admin CODE host name",
            "Type": "String"
        },
        "previewUsername": {
            "Description": "Content API CODE Preview username",
            "Type": "String"
        },
        "previewPassword": {
            "Description": "Content API CODE Preview password",
            "Type": "String",
            "NoEcho": true
        },
        "r2AdminUsername": {
            "Description": "R2 Admin CODE username",
            "Type": "String"
        },
        "r2AdminPassword": {
            "Description": "R2 Admin CODE password",
            "Type": "String",
            "NoEcho": true
        }
    },

    "Resources": {
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "LoadBalancerName": { "Fn::Join": [ "", ["content-api-sanity-tests-", { "Ref": "Stage" }] ] },
                "AvailabilityZones": { "Fn::GetAZs": "" },
                "CrossZone": true,
                "Listeners": [
                    {
                        "Protocol": "HTTP",
                        "LoadBalancerPort": "9000",
                        "InstancePort": "9000"
                    }
                ],
                "HealthCheck": {
                    "Target": "HTTP:9000/healthcheck",
                    "Timeout": "5",
                    "Interval": "10",
                    "UnhealthyThreshold": "2",
                    "HealthyThreshold": "2"
                }
            }
        },
        "AutoscalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": "" },
                "LaunchConfigurationName": { "Ref": "LaunchConfig" },
                "MinSize": "1",
                "MaxSize": "2",
                "DesiredCapacity": "1",
                "HealthCheckType": "ELB",
                "HealthCheckGracePeriod": 300,
                "LoadBalancerNames": [ { "Ref": "LoadBalancer" } ],
                "Tags": [
                    {
                        "Key": "Stage",
                        "Value": { "Ref": "Stage" },
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Stack",
                        "Value": "content-api-sanity-tests",
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "App",
                        "Value": "sanity-tests",
                        "PropagateAtLaunch": "true"
                    }
                ]
            }
        },
        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",

            "Properties": {
                "ImageId": "ami-896c96fe",
                "SecurityGroups": [ { "Ref": "SecurityGroup" } ],
                "InstanceType": "t1.micro",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [ "\n", [
                            "#!/bin/bash -ev",
                            "apt-get -y update",
                            "apt-get -y install language-pack-en openjdk-7-jre-headless unzip",

                            "adduser --disabled-password content-api",
                            "wget -NP /home/ubuntu/.ssh https://s3-eu-west-1.amazonaws.com/content-api-dist/authorized_keys",
                            "cd /home/content-api",
                            "mkdir logs",
                            "mkdir -p /etc/gu",
                            "mkdir -p /var/run/ports",


                            { "Fn::Join": [ "", [ "wget https://s3-eu-west-1.amazonaws.com/content-api-sanity-tests-dist/content-api-sanity-tests/",{ "Ref": "Stage" }, "/sanity-tests/sanity-tests.tar.gz" ] ] },
                            "tar -xvf sanity-tests.tar.gz",
                            "unzip sanity-tests-1.0.zip",
                            "mv sanity-tests-1.0 sanity-tests",
                            "rm sanity-tests.tar.gz",
                            "rm sanity-tests-1.0.zip",
                            "mv sanity-tests.conf /etc/init",
                            "chown -R content-api /home/content-api /etc/gu",
                            "chgrp -R content-api /home/content-api /etc/gu",
                            "cat > /etc/gu/content-api-sanity-tests.conf <<EOF",
                            "content-api-sanity-tests {",
                            { "Fn::Join": [ "", [ "host=\"", { "Ref": "host" },"\"" ] ] },
                            { "Fn::Join": [ "", [ "host-public-secure=\"", { "Ref": "hostPublicSecure" },"\"" ] ] },
                            { "Fn::Join": [ "", [ "write-preview-host=\"", { "Ref": "writePreviewHost" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "preview-host=\"", { "Ref": "previewHost" },"\"" ] ] },
                            { "Fn::Join": [ "", [ "preview-username=\"", { "Ref": "previewUsername" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "preview-password=\"", { "Ref": "previewPassword" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "api-key=\"", { "Ref": "apiKey" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "write-host=\"", { "Ref": "writeHost" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "write-username=\"", { "Ref": "writeUsername" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "write-password=\"", { "Ref": "writePassword" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "pager-duty-service-key=\"", { "Ref": "pagerDutyServiceKey" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "pager-duty-service-key-low-priority=\"", { "Ref": "pagerDutyServiceKeyLowPriority" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "r2-admin-host=\"", { "Ref": "r2AdminHost" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "r2-admin-username=\"", { "Ref": "r2AdminUsername" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "r2-admin-password=\"", { "Ref": "r2AdminPassword" },"\""  ] ] },
                            { "Fn::Join": [ "", [ "composer-host=\"", { "Ref": "composerHost" },"\""  ] ] },
                            "}",
                            "ws.compressionEnabled=true",
                            "EOF",
                            "start sanity-tests"
                        ] ]
                    }
                }
            }
        },

        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH and HTTP",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9000",
                        "ToPort": "9000",
                        "CidrIp": "77.91.248.0/21"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9000",
                        "ToPort": "9000",
                        "SourceSecurityGroupName": "amazon-elb-sg",
                        "SourceSecurityGroupOwnerId": "amazon-elb"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "77.91.248.0/21"
                    }
                ]
            }
        }
    },

    "Outputs": {
        "LoadBalancer": {
            "Value": { "Fn::GetAtt": [ "LoadBalancer", "DNSName" ] }
        }
    }
}